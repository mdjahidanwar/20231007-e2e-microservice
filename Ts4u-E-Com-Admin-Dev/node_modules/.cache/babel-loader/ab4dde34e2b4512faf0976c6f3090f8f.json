{"ast":null,"code":"let init = {\n  categories: [],\n  brands: [],\n  isCategoryLoading: false,\n  isBrandLoading: false\n};\n\nconst generalData = (state = init, action) => {\n  switch (action.type) {\n    case \"SET_CATEGORIES\":\n      return { ...state,\n        categories: action.payload\n      };\n\n    case \"CATEGORY_LOADING_START\":\n      return { ...state,\n        isCategoryLoading: true\n      };\n\n    case \"CATEGORY_LOADING_FINISHED\":\n      return { ...state,\n        isCategoryLoading: false\n      };\n\n    case \"SET_BRANDS\":\n      return { ...state,\n        brands: action.payload\n      };\n\n    case \"ADD_NEW_BRAND\":\n      return { ...state,\n        brands: [...state.brands, action.payload]\n      };\n\n    case \"DELETE_BRAND\":\n      return { ...state,\n        brands: state.brands.filter(brand => brand._id !== action.payload)\n      };\n\n    case \"UPDATE_BRAND\":\n      let brandArray = [...state.brands];\n      let brandIndex = brandArray.findIndex(brand => brand._id === action.payload._id);\n      brandArray[brandIndex] = action.payload;\n      return { ...state,\n        brands: brandArray\n      };\n\n    case \"BRAND_LOADING_START\":\n      return { ...state,\n        isBrandLoading: true\n      };\n\n    case \"BRAND_LOADING_FINISHED\":\n      return { ...state,\n        isBrandLoading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default generalData;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/store/reducer/generalData.js"],"names":["init","categories","brands","isCategoryLoading","isBrandLoading","generalData","state","action","type","payload","filter","brand","_id","brandArray","brandIndex","findIndex"],"mappings":"AACA,IAAIA,IAAI,GAAE;AACNC,EAAAA,UAAU,EAAC,EADL;AAENC,EAAAA,MAAM,EAAC,EAFD;AAGNC,EAAAA,iBAAiB,EAAC,KAHZ;AAINC,EAAAA,cAAc,EAAC;AAJT,CAAV;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACN,IAAP,EAAaO,MAAb,KAAsB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACD,aAAM,EACF,GAAGF,KADD;AAEFL,QAAAA,UAAU,EAACM,MAAM,CAACE;AAFhB,OAAN;;AAIC,SAAK,wBAAL;AACD,aAAM,EACF,GAAGH,KADD;AAEFH,QAAAA,iBAAiB,EAAC;AAFhB,OAAN;;AAIC,SAAK,2BAAL;AACD,aAAM,EACF,GAAGG,KADD;AAEFH,QAAAA,iBAAiB,EAAC;AAFhB,OAAN;;AAIC,SAAK,YAAL;AACD,aAAM,EACF,GAAGG,KADD;AAEFJ,QAAAA,MAAM,EAACK,MAAM,CAACE;AAFZ,OAAN;;AAIC,SAAK,eAAL;AACD,aAAM,EACF,GAAGH,KADD;AAEFJ,QAAAA,MAAM,EAAC,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAiBK,MAAM,CAACE,OAAxB;AAFL,OAAN;;AAIC,SAAK,cAAL;AACD,aAAM,EACF,GAAGH,KADD;AAEFJ,QAAAA,MAAM,EAACI,KAAK,CAACJ,MAAN,CAAaQ,MAAb,CAAoBC,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAcL,MAAM,CAACE,OAAhD;AAFL,OAAN;;AAIC,SAAK,cAAL;AACI,UAAII,UAAU,GAAG,CAAC,GAAGP,KAAK,CAACJ,MAAV,CAAjB;AACA,UAAIY,UAAU,GAAGD,UAAU,CAACE,SAAX,CAAqBJ,KAAK,IAAEA,KAAK,CAACC,GAAN,KAAcL,MAAM,CAACE,OAAP,CAAeG,GAAzD,CAAjB;AACAC,MAAAA,UAAU,CAACC,UAAD,CAAV,GAAyBP,MAAM,CAACE,OAAhC;AACL,aAAM,EACF,GAAGH,KADD;AAEFJ,QAAAA,MAAM,EAACW;AAFL,OAAN;;AAIC,SAAK,qBAAL;AACD,aAAM,EACF,GAAGP,KADD;AAEFF,QAAAA,cAAc,EAAC;AAFb,OAAN;;AAIC,SAAK,wBAAL;AACD,aAAM,EACF,GAAGE,KADD;AAEFF,QAAAA,cAAc,EAAC;AAFb,OAAN;;AAKC;AACI,aAAOE,KAAP;AAnDR;AAqDH,CAtDD;;AAwDA,eAAeD,WAAf","sourcesContent":["\nlet init ={\n    categories:[],\n    brands:[],\n    isCategoryLoading:false,\n    isBrandLoading:false,\n\n}\n\nconst generalData = (state=init, action)=>{\n    switch (action.type) {\n        case \"SET_CATEGORIES\":\n       return{\n           ...state,\n           categories:action.payload\n        }\n        case \"CATEGORY_LOADING_START\":\n       return{\n           ...state,\n           isCategoryLoading:true\n        }\n        case \"CATEGORY_LOADING_FINISHED\":\n       return{\n           ...state,\n           isCategoryLoading:false\n        }\n        case \"SET_BRANDS\":\n       return{\n           ...state,\n           brands:action.payload\n        }\n        case \"ADD_NEW_BRAND\":\n       return{\n           ...state,\n           brands:[...state.brands,action.payload]\n        }\n        case \"DELETE_BRAND\":\n       return{\n           ...state,\n           brands:state.brands.filter(brand=>brand._id !== action.payload)\n        }\n        case \"UPDATE_BRAND\":\n            let brandArray = [...state.brands]\n            let brandIndex = brandArray.findIndex(brand=>brand._id === action.payload._id)\n            brandArray[brandIndex] = action.payload\n       return{\n           ...state,\n           brands:brandArray\n        }\n        case \"BRAND_LOADING_START\":\n       return{\n           ...state,\n           isBrandLoading:true\n        }\n        case \"BRAND_LOADING_FINISHED\":\n       return{\n           ...state,\n           isBrandLoading:false\n        }\n      \n        default:\n            return state;\n    }\n}\n\nexport default generalData"]},"metadata":{},"sourceType":"module"}