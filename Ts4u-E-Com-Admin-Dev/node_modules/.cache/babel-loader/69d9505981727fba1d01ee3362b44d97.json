{"ast":null,"code":"var _jsxFileName = \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/product/BulkImport.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { CSVLink } from \"react-csv\";\nimport './bulk.scss';\nconst headers = [{\n  label: \"name *\",\n  key: \"name\"\n}, {\n  label: \"thumbnail *\",\n  key: \"thumbnail\"\n}, {\n  label: \"gallery\",\n  key: \"gallery\"\n}, {\n  label: \"category *\",\n  key: \"categories.category\"\n}, {\n  label: \"brand\",\n  key: \"brand\"\n}, {\n  label: \"Price *\",\n  key: \"price\"\n}, {\n  label: \"discount_type_(flat/percent)\",\n  key: \"discount.discountType\"\n}, {\n  label: \"discount_value\",\n  key: \"discount.value\"\n}, {\n  label: \"tax_type (flat/percent)\",\n  key: \"tax.taxType\"\n}, {\n  label: \"tax_value\",\n  key: \"tax.value\"\n}, {\n  label: \"unit *\",\n  key: \"unit\"\n}, {\n  label: \"sku *\",\n  key: \"sku\"\n}, {\n  label: \"stock *\",\n  key: \"stock\"\n}, {\n  label: \"description\",\n  key: \"description\"\n}, {\n  label: \"shipping_fee\",\n  key: \"shipping.cost\"\n}, {\n  label: \"tags\",\n  key: \"tags\"\n}, {\n  label: \"meta_title\",\n  key: \"meta.title\"\n}, {\n  label: \"meta_description\",\n  key: \"meta.description\"\n}, {\n  label: \"meta_image\",\n  key: \"meta.image\"\n}];\nconst brandHeaders = [{\n  label: \"name *\",\n  key: \"name\"\n}, {\n  label: \"ID *\",\n  key: \"_id\"\n}];\nconst categoriesHeaders = [{\n  label: \"name *\",\n  key: \"name\"\n}, {\n  label: \"ID *\",\n  key: \"_id\"\n}];\n\nfunction BulkImport() {\n  const [csv, setCsv] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [brands, setBrands] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const getBrands = () => {\n    axios.get('/brand/downloadbulk').then(res => {\n      setBrands(res.data.brands);\n    }).catch(err => {\n      err && err.response && alert(err.response.data.error);\n    });\n  };\n\n  const getCategories = () => {\n    axios.get('/category/downloadbulk').then(res => {\n      setCategories(res.data.categories);\n    }).catch(err => {\n      err && err.response && alert(err.response.data.error);\n    });\n  };\n\n  useEffect(() => {\n    getBrands();\n    getCategories();\n  }, []);\n\n  const handleSaveCsv = () => {\n    setIsLoading(true);\n    let formData = new FormData();\n    formData.append('file', csv);\n    axios.post('/product/bulkupload', formData).then(res => {\n      alert(`${res.data.count} products added`);\n      setCsv(null);\n      setIsLoading(false);\n    }).catch(err => {\n      setIsLoading(false);\n      err && err.response && alert(err.response.data.error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    title: \"Product Bulk Upload \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bulk_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Step 1:\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"1. Download the skeleton file and fill it with proper data.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"2. You can download the example file to understand how the data must be filled.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"3. Once you have downloaded and filled the skeleton file, upload it in the form below and submit.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"4. After uploading products you need to edit them and set product's variations.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CSVLink, {\n    data: [],\n    headers: headers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Download skeleton CSV\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bulk_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Step 2:\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"1. Category and Brand should be in id.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"2. You can download the JSON to get Category and Brand id.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CSVLink, {\n    data: categories,\n    headers: categoriesHeaders,\n    asyncOnClick: true,\n    onClick: (event, done) => {\n      categories.length > 0 ? done() : done(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: categories.length === 0,\n    type: \"primary\",\n    style: {\n      marginRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Download Category\")), /*#__PURE__*/React.createElement(CSVLink, {\n    data: brands,\n    headers: brandHeaders,\n    asyncOnClick: true,\n    onClick: (event, done) => {\n      brands.length > 0 ? done() : done(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: brands.length === 0,\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Download Brand\")))), /*#__PURE__*/React.createElement(Card, {\n    title: \"Upload file\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setCsv(e.target.files[0]),\n    type: \"file\",\n    id: \"file\",\n    \"aria-label\": \"Browse csv file\",\n    accept: \".csv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"file-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, csv && csv.name)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !csv,\n    loading: isLoading,\n    onClick: () => handleSaveCsv(),\n    className: \"d-center\",\n    type: \"primary\",\n    icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 136\n      }\n    }),\n    size: \"size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Upload File \")));\n}\n\nexport default BulkImport;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/product/BulkImport.js"],"names":["React","useState","useEffect","Card","Button","UploadOutlined","axios","CSVLink","headers","label","key","brandHeaders","categoriesHeaders","BulkImport","csv","setCsv","isLoading","setIsLoading","brands","setBrands","categories","setCategories","getBrands","get","then","res","data","catch","err","response","alert","error","getCategories","handleSaveCsv","formData","FormData","append","post","count","marginTop","event","done","length","marginRight","e","target","files","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card, Button } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { CSVLink } from \"react-csv\";\n\nimport './bulk.scss'\n\nconst headers = [\n    { label: \"name *\", key: \"name\" },\n    { label: \"thumbnail *\", key: \"thumbnail\" },\n    { label: \"gallery\", key: \"gallery\" },\n    { label: \"category *\", key: \"categories.category\" },\n    { label: \"brand\", key: \"brand\" },\n    { label: \"Price *\", key: \"price\" },\n    { label: \"discount_type_(flat/percent)\", key: \"discount.discountType\" },\n    { label: \"discount_value\", key: \"discount.value\" },\n    { label: \"tax_type (flat/percent)\", key: \"tax.taxType\" },\n    { label: \"tax_value\", key: \"tax.value\" },\n    { label: \"unit *\", key: \"unit\" },\n    { label: \"sku *\", key: \"sku\" },\n    { label: \"stock *\", key: \"stock\" },\n    { label: \"description\", key: \"description\" },\n    { label: \"shipping_fee\", key: \"shipping.cost\" },\n    { label: \"tags\", key: \"tags\" },\n    { label: \"meta_title\", key: \"meta.title\" },\n    { label: \"meta_description\", key: \"meta.description\" },\n    { label: \"meta_image\", key: \"meta.image\" },\n\n];\n\n\nconst brandHeaders = [\n    { label: \"name *\", key: \"name\" },\n    { label: \"ID *\", key: \"_id\" },\n\n];\n\n\nconst categoriesHeaders = [\n    { label: \"name *\", key: \"name\" },\n    { label: \"ID *\", key: \"_id\" },\n\n];\n\n\nfunction BulkImport() {\n    const [csv, setCsv] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n\n    const [brands, setBrands] = useState([])\n    const [categories, setCategories] = useState([])\n\n\n\n    const getBrands = () => {\n        axios.get('/brand/downloadbulk')\n            .then(res => {\n                setBrands(res.data.brands);\n            })\n            .catch(err => {\n                err && err.response && alert(err.response.data.error)\n            })\n    }\n\n    const getCategories = () => {\n        axios.get('/category/downloadbulk')\n            .then(res => {\n                setCategories(res.data.categories);\n            })\n            .catch(err => {\n                err && err.response && alert(err.response.data.error)\n            })\n    }\n\n\n    useEffect(() => {\n        getBrands()\n        getCategories()\n    }, [])\n\n\n    const handleSaveCsv = () => {\n        setIsLoading(true)\n        let formData = new FormData()\n        formData.append('file', csv)\n        axios.post('/product/bulkupload', formData)\n            .then(res => {\n                alert(`${res.data.count} products added`)\n                setCsv(null)\n                setIsLoading(false)\n            })\n            .catch(err => {\n                setIsLoading(false)\n                err && err.response && alert(err.response.data.error)\n            })\n    }\n\n\n    return (\n        <>\n            <Card title=\"Product Bulk Upload \">\n                <div className=\"bulk_info\">\n                    <strong>Step 1:</strong>\n                    <li>1. Download the skeleton file and fill it with proper data.</li>\n                    <li>2. You can download the example file to understand how the data must be filled.</li>\n                    <li>3. Once you have downloaded and filled the skeleton file, upload it in the form below and submit.</li>\n                    <li>4. After uploading products you need to edit them and set product's variations.</li>\n                </div>\n                <div style={{ marginTop: \"15px\" }}>\n                    <CSVLink\n                        data={[]}\n                        headers={headers}\n                    >\n                        <Button type=\"primary\">Download skeleton CSV</Button>\n                    </CSVLink>\n                </div>\n                <div className=\"bulk_info\">\n                    <strong>Step 2:</strong>\n                    <li>1. Category and Brand should be in id.</li>\n                    <li>2. You can download the JSON to get Category and Brand id.</li>\n                </div>\n                <div style={{ marginTop: \"15px\" }}>\n\n\n                    <CSVLink\n                        data={categories}\n                        headers={categoriesHeaders}\n                        asyncOnClick={true}\n                        onClick={(event, done) => {\n                            categories.length > 0 ? done()\n                                : done(false)\n                        }}\n                    >\n                        <Button disabled={categories.length===0} type=\"primary\" style={{ marginRight: \"20px\" }}>Download Category</Button>\n                    </CSVLink>\n\n                    <CSVLink\n                        data={brands}\n                        headers={brandHeaders}\n                        asyncOnClick={true}\n                        onClick={(event, done) => {\n                            brands.length > 0 ? done()\n                                : done(false)\n                        }}\n                    >\n                    <Button disabled={brands.length===0} type=\"primary\">Download Brand</Button>\n                    </CSVLink>\n                </div>\n            </Card>\n            <Card title=\"Upload file\" style={{ marginTop: \"20px\" }}>\n                <label class=\"file\">\n                    <input onChange={(e) => setCsv(e.target.files[0])} type=\"file\" id=\"file\" aria-label=\"Browse csv file\" accept='.csv' />\n                    <span class=\"file-custom\">{csv && csv.name}</span>\n                </label>\n                <br></br>\n                <Button  disabled={!csv} loading={isLoading} onClick={() => handleSaveCsv()} className='d-center' type=\"primary\" icon={<UploadOutlined />} size={\"size\"} >Upload File </Button>\n            </Card>\n        </>\n    )\n}\n\nexport default BulkImport\n"]},"metadata":{},"sourceType":"module"}