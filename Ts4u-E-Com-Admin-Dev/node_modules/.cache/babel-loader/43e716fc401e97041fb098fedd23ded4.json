{"ast":null,"code":"import _regeneratorRuntime from \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileUploadList from \"./FileUploadList\";\n\nfunction readFile(file) {\n  var fileReader = new FileReader();\n  return new Promise(function (resolve, reject) {\n    fileReader.onerror = function () {\n      fileReader.abort();\n      reject(new DOMException(\"Problem parsing input file.\"));\n    };\n\n    fileReader.onload = function () {\n      resolve(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  });\n}\n\nvar FileUpload = function FileUpload(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileUploadList = _useState2[0],\n      setFileUploadList = _useState2[1];\n\n  function onDrop(acceptedFiles) {\n    var _this = this;\n\n    var newFileUploadList = acceptedFiles.map(function (element) {\n      return {\n        fileName: element.name,\n        status: 0\n      };\n    }).concat(fileUploadList);\n    setFileUploadList(newFileUploadList); // Loop through dropped files\n\n    acceptedFiles.forEach(function (file, index) {\n      (function () {\n        return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var fileBase64, fileMeta, result;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return readFile(file);\n\n                case 2:\n                  fileBase64 = _context.sent;\n                  fileMeta = {\n                    fileName: file.name,\n                    type: file.type,\n                    size: file.size\n                  };\n                  _context.next = 6;\n                  return props.fileUploadCallback(fileBase64, fileMeta);\n\n                case 6:\n                  result = _context.sent;\n                  newFileUploadList = _toConsumableArray(newFileUploadList);\n                  newFileUploadList[index].status = result ? 1 : -1;\n                  setFileUploadList(newFileUploadList);\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n      })();\n    });\n  }\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", Object.assign({\n    className: \"p-5 text-center alert alert-\".concat(isDragActive ? \"success\" : \"secondary\")\n  }, getRootProps()), React.createElement(\"input\", Object.assign({}, getInputProps())), isDragActive ? React.createElement(\"p\", {\n    className: \"m-0\"\n  }, \"Drop the files here ...\") : React.createElement(\"p\", {\n    className: \"m-0\"\n  }, \"Drag 'n' drop some files here, or click to select files\")), React.createElement(FileUploadList, {\n    fileUploadList: fileUploadList\n  }));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["../../src/components/FileUpload.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileUploadList from \"./FileUploadList\";\nfunction readFile(file) {\n    const fileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n        fileReader.onerror = () => {\n            fileReader.abort();\n            reject(new DOMException(\"Problem parsing input file.\"));\n        };\n        fileReader.onload = () => {\n            resolve(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    });\n}\nconst FileUpload = (props) => {\n    const [fileUploadList, setFileUploadList] = useState([]);\n    function onDrop(acceptedFiles) {\n        let newFileUploadList = acceptedFiles.map((element) => {\n            return { fileName: element.name, status: 0 };\n        }).concat(fileUploadList);\n        setFileUploadList(newFileUploadList);\n        // Loop through dropped files\n        acceptedFiles.forEach((file, index) => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const fileBase64 = yield readFile(file);\n                const fileMeta = { fileName: file.name, type: file.type, size: file.size };\n                const result = yield props.fileUploadCallback(fileBase64, fileMeta);\n                newFileUploadList = [...newFileUploadList];\n                newFileUploadList[index].status = (result) ? 1 : -1;\n                setFileUploadList(newFileUploadList);\n            }))();\n        });\n    }\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", Object.assign({ className: `p-5 text-center alert alert-${isDragActive ? \"success\" : \"secondary\"}` }, getRootProps()),\n            React.createElement(\"input\", Object.assign({}, getInputProps())),\n            isDragActive ?\n                React.createElement(\"p\", { className: \"m-0\" }, \"Drop the files here ...\") :\n                React.createElement(\"p\", { className: \"m-0\" }, \"Drag 'n' drop some files here, or click to select files\")),\n        React.createElement(FileUploadList, { fileUploadList: fileUploadList })));\n};\nexport default FileUpload;\n//# sourceMappingURL=FileUpload.js.map"]},"metadata":{},"sourceType":"module"}