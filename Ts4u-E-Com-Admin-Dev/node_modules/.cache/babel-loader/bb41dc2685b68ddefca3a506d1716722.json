{"ast":null,"code":"var _jsxFileName = \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/orders/Orders.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Button, Table, Space, Input } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nconst Search = Input.Search;\n\nfunction Orders() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(\"order/allorders\").then(res => {\n      setOrders(res.data.orders);\n      setRecords(res.data.orders);\n      setIsLoading(false);\n    }).catch(err => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleSearch = val => {\n    if (val == \"\") setOrders(records);else setOrders(records.filter(x => x.invoice.includes(val)));\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRowKeys(selectedRowKeys);\n      setSelectedRows(selectedRows);\n    }\n  };\n  const columns = [{\n    title: 'Invoice',\n    dataIndex: 'invoice',\n    key: 'invoice'\n  }, {\n    title: 'Num of Products',\n    dataIndex: 'items',\n    key: 'items',\n    sorter: (a, b) => a.items.length - b.items.length,\n    render: items => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, items.length)\n  }, {\n    title: 'Customer',\n    dataIndex: 'user',\n    key: 'user',\n    render: user => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, user === null || user === void 0 ? void 0 : user.name)\n  }, {\n    title: 'Amount',\n    dataIndex: 'totalAmount',\n    key: 'totalAmount',\n    sorter: (a, b) => a.totalAmount - b.totalAmount,\n    render: amount => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"$ \", amount)\n  }, {\n    title: 'Delivery Status',\n    key: 'orderStatus',\n    dataIndex: 'orderStatus',\n    filters: [{\n      text: 'Pending',\n      value: 'pending'\n    }, {\n      text: 'Processing',\n      value: 'processing'\n    }, {\n      text: 'Packed',\n      value: 'packed'\n    }, {\n      text: 'Shipped',\n      value: 'shipped'\n    }, {\n      text: 'Delivered',\n      value: 'delivered'\n    }, {\n      text: 'Cancelled',\n      value: 'cancelled'\n    }],\n    onFilter: (value, record) => record.orderStatus.includes(value)\n  }, {\n    title: 'Payment Status',\n    key: 'paymentStatus',\n    dataIndex: 'paymentStatus',\n    filters: [{\n      text: 'Unpaid',\n      value: 'unpaid'\n    }, {\n      text: 'Paid',\n      value: 'paid'\n    }, {\n      text: 'COD',\n      value: 'cod'\n    }, {\n      text: 'Partial',\n      value: 'partial'\n    }, {\n      text: 'Refund Requested',\n      value: 'refundRequested'\n    }, {\n      text: 'Refunded',\n      value: 'refunded'\n    }],\n    onFilter: (value, record) => record.paymentStatus.includes(value) && record.paymentStatus === value && record.paymentStatus.includes(value)\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/React.createElement(Space, {\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => history.push(`/order/details/${record.invoice}`),\n      className: \"d-center\",\n      type: \"primary\",\n      icon: /*#__PURE__*/React.createElement(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 136\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"All Orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Enter Invoice\",\n    onSearch: handleSearch,\n    style: {\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    rowKey: \"_id\" //rowSelection={rowSelection}\n    ,\n    loading: isLoading,\n    columns: columns,\n    dataSource: orders,\n    pagination: {\n      defaultPageSize: 10,\n      showSizeChanger: true,\n      pageSizeOptions: ['10', '20', '30'],\n      showQuickJumper: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Orders;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/orders/Orders.js"],"names":["React","useEffect","useState","axios","useHistory","Card","Button","Table","Space","Input","EyeOutlined","Search","Orders","history","isLoading","setIsLoading","orders","setOrders","records","setRecords","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","get","then","res","data","catch","err","handleSearch","val","filter","x","invoice","includes","rowSelection","onChange","columns","title","dataIndex","key","sorter","a","b","items","length","render","user","name","totalAmount","amount","filters","text","value","onFilter","record","orderStatus","paymentStatus","push","width","defaultPageSize","showSizeChanger","pageSizeOptions","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { useHistory } from 'react-router-dom'\nimport { Card, Button, Table, Space, Input } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons'\nconst Search = Input.Search;\n\n\n\n\n\n\n\nfunction Orders() {\n    const history = useHistory()\n    const [isLoading, setIsLoading] = useState(false)\n\n    const [orders, setOrders] = useState([])\n    const [records, setRecords] = useState([])\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\n    const [selectedRows, setSelectedRows] = useState([])\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        axios.get(\"order/allorders\")\n            .then(res => {\n                setOrders(res.data.orders);\n                setRecords(res.data.orders);\n                setIsLoading(false)\n            })\n            .catch(err => {\n                setIsLoading(false)\n            })\n    }, [])\n\n\n    const handleSearch = val => {\n       \n                if (val == \"\")\n                    setOrders(records);\n                else\n                setOrders(records.filter(x => x.invoice.includes(val)))\n            \n    }\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: (selectedRowKeys, selectedRows) => {\n\n            setSelectedRowKeys(selectedRowKeys);\n            setSelectedRows(selectedRows)\n        },\n    };\n\n\n    const columns = [\n        {\n            title: 'Invoice',\n            dataIndex: 'invoice',\n            key: 'invoice',\n        },\n        {\n            title: 'Num of Products',\n            dataIndex: 'items',\n            key: 'items',\n            sorter: (a, b) => a.items.length - b.items.length,\n            render: items =>\n                <span>{items.length}</span>\n        },\n        {\n            title: 'Customer',\n            dataIndex: 'user',\n            key: 'user',\n            render: user =>\n                <span>{user?.name}</span>\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'totalAmount',\n            key: 'totalAmount',\n            sorter: (a, b) => a.totalAmount - b.totalAmount,\n            render: amount =>\n                <span>$ {amount}</span>\n\n        },\n        {\n            title: 'Delivery Status',\n            key: 'orderStatus',\n            dataIndex: 'orderStatus',\n            filters: [\n                { text: 'Pending', value: 'pending' },\n                { text: 'Processing', value: 'processing' },\n                { text: 'Packed', value: 'packed' },\n                { text: 'Shipped', value: 'shipped' },\n                { text: 'Delivered', value: 'delivered' },\n                { text: 'Cancelled', value: 'cancelled' },\n            ],\n            onFilter: (value, record) => record.orderStatus.includes(value)\n        },\n        {\n            title: 'Payment Status',\n            key: 'paymentStatus',\n            dataIndex: 'paymentStatus',\n            filters: [\n                { text: 'Unpaid', value: 'unpaid' },\n                { text: 'Paid', value: 'paid' },\n                { text: 'COD', value: 'cod' },\n                { text: 'Partial', value: 'partial' },\n                { text: 'Refund Requested', value: 'refundRequested' },\n                { text: 'Refunded', value: 'refunded' },\n            ],\n            onFilter: (value, record) => record.paymentStatus.includes(value) && record.paymentStatus === value && record.paymentStatus.includes(value)\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button onClick={() => history.push(`/order/details/${record.invoice}`)} className='d-center' type='primary' icon={<EyeOutlined />}></Button>\n\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Card title=\"All Orders\">\n\n\n\n                <Search\n                    placeholder=\"Enter Invoice\"\n                    onSearch={handleSearch}\n                    style={{ width: 200 }}\n                />\n                <Table\n                    rowKey=\"_id\"\n                    //rowSelection={rowSelection}\n                    loading={isLoading}\n                    columns={columns}\n                    dataSource={orders}\n                    pagination={{ defaultPageSize: 10, showSizeChanger: true, pageSizeOptions: ['10', '20', '30'], showQuickJumper: true }}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default Orders\n"]},"metadata":{},"sourceType":"module"}