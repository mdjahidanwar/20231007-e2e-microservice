{"ast":null,"code":"var _jsxFileName = \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/reviews/ProductReviews.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Button, Table, Space, Input, Switch, Popconfirm, Modal } from 'antd';\nimport { EyeOutlined, DeleteOutlined, QuestionCircleOutlined, RetweetOutlined } from '@ant-design/icons';\nconst Search = Input.Search;\n\nfunction ProductReviews() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isReviewUpdating, setIsReviewUpdating] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedReview, setSelectedReview] = useState(null);\n  const [selectedComment, setSelectedComment] = useState('');\n  const [selectedReply, setSelectedReply] = useState('');\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n    setSelectedReview(null);\n    setSelectedComment(\"\");\n    setSelectedReply(\"\");\n  };\n\n  const showModal = review => {\n    var _review$reply;\n\n    setSelectedReview(review._id);\n    setSelectedComment(review.comment);\n    setSelectedReply(review.reply ? (_review$reply = review.reply) === null || _review$reply === void 0 ? void 0 : _review$reply.comment : \"\");\n    setIsModalVisible(true);\n  };\n\n  const handleUpdate = () => {\n    if (!selectedReview) {\n      return alert(\"Please select a review\");\n    }\n\n    setIsReviewUpdating(true);\n    let data = {\n      comment: selectedComment,\n      reply: {\n        name: \"Seller\",\n        profile: \"\",\n        comment: selectedReply\n      }\n    };\n    axios.put(`/review/update/${selectedReview}`, data).then(res => {\n      let array = [...reviews];\n      let index = array.findIndex(r => r._id === res.data.review._id);\n      array[index] = res.data.review;\n      setReviews(array);\n      setIsReviewUpdating(false);\n      handleCancel();\n    }).catch(err => {\n      setIsReviewUpdating(false);\n      console.log(err);\n    });\n  };\n\n  const deleteReview = id => {\n    axios.delete(`/review/delete/${id}`).then(res => {\n      if (res.data.success) {\n        setReviews(prev => prev.filter(review => review._id !== id));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(\"/review/all\").then(res => {\n      setReviews(res.data.reviews);\n      setIsLoading(false);\n    }).catch(err => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleTogglePublish = (val, id) => {\n    setIsLoading(true);\n    axios.put(`/review/togglepublish/${id}`, {\n      isPublished: val\n    }).then(res => {\n      let array = [...reviews];\n      let index = array.findIndex(r => r._id === res.data.review._id);\n      array[index] = res.data.review;\n      setReviews(array);\n      setIsLoading(false);\n    }).catch(err => {\n      setIsLoading(false);\n      console.log(err);\n    }); //togglepublish\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedRowKeys(selectedRowKeys);\n      setSelectedRows(selectedRows);\n    }\n  };\n  const columns = [{\n    title: 'Product',\n    dataIndex: 'product',\n    key: 'product',\n    render: product => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, product.name)\n  }, {\n    title: 'Customer',\n    dataIndex: 'user',\n    key: 'user',\n    render: user => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"(\", user.email, \")\"))\n  }, {\n    title: 'Rating',\n    dataIndex: 'rating',\n    key: 'raging',\n    sorter: (a, b) => a.rating - b.rating,\n    render: rating => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, rating)\n  }, {\n    title: 'Comment',\n    dataIndex: 'comment',\n    key: 'raging',\n    render: comment => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, comment)\n  }, {\n    title: 'Reply',\n    dataIndex: 'reply',\n    key: 'reply',\n    render: reply => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, reply ? reply === null || reply === void 0 ? void 0 : reply.comment : \"N/A\")\n  }, {\n    title: 'Published',\n    key: 'isPublished',\n    dataIndex: 'isPublished',\n    //sorter: (a, b) => Number(a.isActive) - Number(b.isActive),\n    render: (isPublished, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n      checked: isPublished,\n      onChange: val => handleTogglePublish(val, record._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    })),\n    filters: [{\n      text: 'Published',\n      value: true\n    }, {\n      text: 'Unpublished',\n      value: false\n    }],\n    onFilter: (value, record) => record.isPublished === value\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/React.createElement(Space, {\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popconfirm, {\n      onConfirm: () => deleteReview(record._id),\n      title: \"Are you sure\\uFF1F\",\n      icon: /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 104\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"d-center\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 60\n        }\n      }),\n      danger: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => showModal(record),\n      className: \"d-center\",\n      type: \"primary\",\n      icon: /*#__PURE__*/React.createElement(RetweetOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 105\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, \"Reply\"))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    title: \"Review\",\n    zIndex: 1111,\n    visible: isModalVisible,\n    onCancel: handleCancel,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      key: \"back\",\n      onClick: () => handleCancel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: isReviewUpdating,\n      onClick: () => handleUpdate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, \"Update\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(Input.TextArea, {\n    placeholder: \"Write your comment here\",\n    value: selectedComment,\n    onChange: e => setSelectedComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Reply\"), /*#__PURE__*/React.createElement(Input.TextArea, {\n    placeholder: \"Write your reply here\",\n    value: selectedReply,\n    onChange: e => setSelectedReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    title: \"Product Reviews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    rowKey: \"_id\" //rowSelection={rowSelection}\n    ,\n    loading: isLoading,\n    columns: columns,\n    dataSource: reviews,\n    pagination: {\n      defaultPageSize: 10,\n      showSizeChanger: true,\n      pageSizeOptions: ['10', '20', '30'],\n      showQuickJumper: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default ProductReviews;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/reviews/ProductReviews.js"],"names":["React","useEffect","useState","axios","useHistory","Card","Button","Table","Space","Input","Switch","Popconfirm","Modal","EyeOutlined","DeleteOutlined","QuestionCircleOutlined","RetweetOutlined","Search","ProductReviews","history","isLoading","setIsLoading","isReviewUpdating","setIsReviewUpdating","isModalVisible","setIsModalVisible","reviews","setReviews","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","selectedReview","setSelectedReview","selectedComment","setSelectedComment","selectedReply","setSelectedReply","handleCancel","showModal","review","_id","comment","reply","handleUpdate","alert","data","name","profile","put","then","res","array","index","findIndex","r","catch","err","console","log","deleteReview","id","delete","success","prev","filter","get","handleTogglePublish","val","isPublished","rowSelection","onChange","columns","title","dataIndex","key","render","product","user","email","sorter","a","b","rating","record","filters","text","value","onFilter","color","e","target","marginTop","defaultPageSize","showSizeChanger","pageSizeOptions","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { useHistory } from 'react-router-dom'\nimport { Card, Button, Table, Space, Input, Switch, Popconfirm, Modal } from 'antd';\nimport { EyeOutlined, DeleteOutlined, QuestionCircleOutlined, RetweetOutlined } from '@ant-design/icons'\nconst Search = Input.Search;\n\n\n\n\n\n\n\nfunction ProductReviews() {\n    const history = useHistory()\n    const [isLoading, setIsLoading] = useState(false)\n    const [isReviewUpdating, setIsReviewUpdating] = useState(false)\n    const [isModalVisible, setIsModalVisible] = useState(false)\n\n    const [reviews, setReviews] = useState([])\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\n    const [selectedRows, setSelectedRows] = useState([])\n\n    const [selectedReview, setSelectedReview] = useState(null)\n    const [selectedComment, setSelectedComment] = useState('')\n    const [selectedReply, setSelectedReply] = useState('')\n\n\n    const handleCancel = () => {\n        setIsModalVisible(false)\n        setSelectedReview(null)\n        setSelectedComment(\"\")\n        setSelectedReply(\"\")\n    }\n    const showModal = (review) => {\n        setSelectedReview(review._id)\n        setSelectedComment(review.comment)\n        setSelectedReply(review.reply ? review.reply?.comment : \"\")\n        setIsModalVisible(true)\n    }\n\n    const handleUpdate = () => {\n        if(!selectedReview){\n            return alert(\"Please select a review\")\n        }\n        setIsReviewUpdating(true)\n\n        let data={\n            comment:selectedComment,\n            reply:{\n                name:\"Seller\",\n                profile:\"\",\n                comment:selectedReply\n            }\n        }\n    \n        axios.put(`/review/update/${selectedReview}`, data)\n            .then(res => {\n                let array = [...reviews]\n                let index = array.findIndex(r => r._id === res.data.review._id)\n                array[index] = res.data.review\n                setReviews(array)\n                setIsReviewUpdating(false)\n                handleCancel()\n            })\n            .catch(err => {\n                setIsReviewUpdating(false)\n                console.log(err);\n            })\n    }\n\n    const deleteReview = (id) => {\n        axios.delete(`/review/delete/${id}`)\n        .then(res=>{\n            if(res.data.success){\n                setReviews(prev=>(\n                    prev.filter(review=>review._id !== id)\n                ))\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n\n    useEffect(() => {\n        setIsLoading(true)\n        axios.get(\"/review/all\")\n            .then(res => {\n                setReviews(res.data.reviews);\n                setIsLoading(false)\n            })\n            .catch(err => {\n                setIsLoading(false)\n            })\n    }, [])\n\n    \n\n    const handleTogglePublish = (val, id) => {\n        setIsLoading(true)\n        axios.put(`/review/togglepublish/${id}`, { isPublished: val })\n            .then(res => {\n                let array = [...reviews]\n                let index = array.findIndex(r => r._id === res.data.review._id)\n                array[index] = res.data.review\n                setReviews(array)\n                setIsLoading(false)\n            })\n            .catch(err => {\n                setIsLoading(false)\n                console.log(err);\n            })\n        //togglepublish\n    }\n\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: (selectedRowKeys, selectedRows) => {\n\n            setSelectedRowKeys(selectedRowKeys);\n            setSelectedRows(selectedRows)\n        },\n    };\n\n\n    const columns = [\n        {\n            title: 'Product',\n            dataIndex: 'product',\n            key: 'product',\n            render: product =>\n                <span>{product.name}</span>\n        },\n        {\n            title: 'Customer',\n            dataIndex: 'user',\n            key: 'user',\n            render: user =>\n                <>\n                    <span>{user.name}</span><br />\n                    <span>({user.email})</span>\n                </>\n        },\n        {\n            title: 'Rating',\n            dataIndex: 'rating',\n            key: 'raging',\n            sorter: (a, b) => a.rating - b.rating,\n            render: rating =>\n                <span>{rating}</span>\n\n        },\n        {\n            title: 'Comment',\n            dataIndex: 'comment',\n            key: 'raging',\n            render: comment =>\n                <span>{comment}</span>\n\n        },\n        {\n            title: 'Reply',\n            dataIndex: 'reply',\n            key: 'reply',\n            render: reply =>\n                <span>{reply ? reply?.comment : \"N/A\"}</span>\n\n        },\n        {\n            title: 'Published',\n            key: 'isPublished',\n            dataIndex: 'isPublished',\n            //sorter: (a, b) => Number(a.isActive) - Number(b.isActive),\n            render: (isPublished, record) => (\n                <>\n                    <Switch checked={isPublished} onChange={val => handleTogglePublish(val, record._id)} />\n                </>\n            ),\n            filters: [\n                { text: 'Published', value: true },\n                { text: 'Unpublished', value: false },\n            ],\n            onFilter: (value, record) => record.isPublished === value\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Popconfirm onConfirm={() => deleteReview(record._id)} title=\"Are you sure？\" icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\n                        <Button className='d-center' icon={<DeleteOutlined />} danger></Button>\n                    </Popconfirm>\n                    <Button onClick={() => showModal(record)} className='d-center' type='primary' icon={<RetweetOutlined />}>Reply</Button>\n\n                </Space>\n            ),\n        },\n    ];\n\n    return (\n        <div>\n            <Modal\n                title=\"Review\"\n                zIndex={1111}\n                visible={isModalVisible}\n                onCancel={handleCancel}\n                footer={[\n                    <Button key=\"back\" onClick={() => handleCancel()}>\n                        Cancel\n                    </Button>,\n                    <Button key=\"submit\" type=\"primary\" loading={isReviewUpdating} onClick={() => handleUpdate()}>\n                        Update\n                    </Button>,\n                ]}\n            >\n                <p>Comment</p>\n                <Input.TextArea\n                    placeholder=\"Write your comment here\"\n                    value={selectedComment}\n                    onChange={e => setSelectedComment(e.target.value)}\n                />\n                <p style={{ marginTop: \"10px\" }}>Reply</p>\n                <Input.TextArea\n                    placeholder=\"Write your reply here\"\n                    value={selectedReply}\n                    onChange={e => setSelectedReply(e.target.value)}\n                />\n            </Modal>\n            <Card title=\"Product Reviews\">\n\n                <Table\n                    rowKey=\"_id\"\n                    //rowSelection={rowSelection}\n                    loading={isLoading}\n                    columns={columns}\n                    dataSource={reviews}\n                    pagination={{ defaultPageSize: 10, showSizeChanger: true, pageSizeOptions: ['10', '20', '30'], showQuickJumper: true }}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default ProductReviews\n"]},"metadata":{},"sourceType":"module"}