{"ast":null,"code":"import _toConsumableArray from\"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var init={categories:[],brands:[],isCategoryLoading:false,isBrandLoading:false};var generalData=function generalData(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:init;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"SET_CATEGORIES\":return _objectSpread(_objectSpread({},state),{},{categories:action.payload});case\"CATEGORY_LOADING_START\":return _objectSpread(_objectSpread({},state),{},{isCategoryLoading:true});case\"CATEGORY_LOADING_FINISHED\":return _objectSpread(_objectSpread({},state),{},{isCategoryLoading:false});case\"SET_BRANDS\":return _objectSpread(_objectSpread({},state),{},{brands:action.payload});case\"ADD_NEW_BRAND\":return _objectSpread(_objectSpread({},state),{},{brands:[].concat(_toConsumableArray(state.brands),[action.payload])});case\"DELETE_BRAND\":return _objectSpread(_objectSpread({},state),{},{brands:state.brands.filter(function(brand){return brand._id!==action.payload;})});case\"UPDATE_BRAND\":var brandArray=_toConsumableArray(state.brands);var brandIndex=brandArray.findIndex(function(brand){return brand._id===action.payload._id;});brandArray[brandIndex]=action.payload;return _objectSpread(_objectSpread({},state),{},{brands:brandArray});case\"BRAND_LOADING_START\":return _objectSpread(_objectSpread({},state),{},{isBrandLoading:true});case\"BRAND_LOADING_FINISHED\":return _objectSpread(_objectSpread({},state),{},{isBrandLoading:false});default:return state;}};export default generalData;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/store/reducer/generalData.js"],"names":["init","categories","brands","isCategoryLoading","isBrandLoading","generalData","state","action","type","payload","filter","brand","_id","brandArray","brandIndex","findIndex"],"mappings":"uYACA,GAAIA,CAAAA,IAAI,CAAE,CACNC,UAAU,CAAC,EADL,CAENC,MAAM,CAAC,EAFD,CAGNC,iBAAiB,CAAC,KAHZ,CAINC,cAAc,CAAC,KAJT,CAAV,CAQA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAsB,IAArBC,CAAAA,KAAqB,2DAAfN,IAAe,IAATO,CAAAA,MAAS,2CACtC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,gBAAL,CACD,sCACOF,KADP,MAEIL,UAAU,CAACM,MAAM,CAACE,OAFtB,GAIC,IAAK,wBAAL,CACD,sCACOH,KADP,MAEIH,iBAAiB,CAAC,IAFtB,GAIC,IAAK,2BAAL,CACD,sCACOG,KADP,MAEIH,iBAAiB,CAAC,KAFtB,GAIC,IAAK,YAAL,CACD,sCACOG,KADP,MAEIJ,MAAM,CAACK,MAAM,CAACE,OAFlB,GAIC,IAAK,eAAL,CACD,sCACOH,KADP,MAEIJ,MAAM,8BAAKI,KAAK,CAACJ,MAAX,GAAkBK,MAAM,CAACE,OAAzB,EAFV,GAIC,IAAK,cAAL,CACD,sCACOH,KADP,MAEIJ,MAAM,CAACI,KAAK,CAACJ,MAAN,CAAaQ,MAAb,CAAoB,SAAAC,KAAK,QAAEA,CAAAA,KAAK,CAACC,GAAN,GAAcL,MAAM,CAACE,OAAvB,EAAzB,CAFX,GAIC,IAAK,cAAL,CACI,GAAII,CAAAA,UAAU,oBAAOP,KAAK,CAACJ,MAAb,CAAd,CACA,GAAIY,CAAAA,UAAU,CAAGD,UAAU,CAACE,SAAX,CAAqB,SAAAJ,KAAK,QAAEA,CAAAA,KAAK,CAACC,GAAN,GAAcL,MAAM,CAACE,OAAP,CAAeG,GAA/B,EAA1B,CAAjB,CACAC,UAAU,CAACC,UAAD,CAAV,CAAyBP,MAAM,CAACE,OAAhC,CACL,sCACOH,KADP,MAEIJ,MAAM,CAACW,UAFX,GAIC,IAAK,qBAAL,CACD,sCACOP,KADP,MAEIF,cAAc,CAAC,IAFnB,GAIC,IAAK,wBAAL,CACD,sCACOE,KADP,MAEIF,cAAc,CAAC,KAFnB,GAKC,QACI,MAAOE,CAAAA,KAAP,CAnDR,CAqDH,CAtDD,CAwDA,cAAeD,CAAAA,WAAf","sourcesContent":["\nlet init ={\n    categories:[],\n    brands:[],\n    isCategoryLoading:false,\n    isBrandLoading:false,\n\n}\n\nconst generalData = (state=init, action)=>{\n    switch (action.type) {\n        case \"SET_CATEGORIES\":\n       return{\n           ...state,\n           categories:action.payload\n        }\n        case \"CATEGORY_LOADING_START\":\n       return{\n           ...state,\n           isCategoryLoading:true\n        }\n        case \"CATEGORY_LOADING_FINISHED\":\n       return{\n           ...state,\n           isCategoryLoading:false\n        }\n        case \"SET_BRANDS\":\n       return{\n           ...state,\n           brands:action.payload\n        }\n        case \"ADD_NEW_BRAND\":\n       return{\n           ...state,\n           brands:[...state.brands,action.payload]\n        }\n        case \"DELETE_BRAND\":\n       return{\n           ...state,\n           brands:state.brands.filter(brand=>brand._id !== action.payload)\n        }\n        case \"UPDATE_BRAND\":\n            let brandArray = [...state.brands]\n            let brandIndex = brandArray.findIndex(brand=>brand._id === action.payload._id)\n            brandArray[brandIndex] = action.payload\n       return{\n           ...state,\n           brands:brandArray\n        }\n        case \"BRAND_LOADING_START\":\n       return{\n           ...state,\n           isBrandLoading:true\n        }\n        case \"BRAND_LOADING_FINISHED\":\n       return{\n           ...state,\n           isBrandLoading:false\n        }\n      \n        default:\n            return state;\n    }\n}\n\nexport default generalData"]},"metadata":{},"sourceType":"module"}