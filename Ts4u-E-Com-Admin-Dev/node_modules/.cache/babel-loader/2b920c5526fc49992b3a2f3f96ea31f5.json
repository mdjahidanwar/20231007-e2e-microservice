{"ast":null,"code":"let init = {\n  media: []\n};\n\nconst mediaReducer = (state = init, action) => {\n  switch (action.type) {\n    case \"SET_MEDIA\":\n      return { ...state,\n        media: action.payload\n      };\n\n    case \"ADD_MEDIA\":\n      return { ...state,\n        media: [action.payload, ...state.media]\n      };\n\n    case \"UPDATE_MEDIA\":\n      let array = [...state.media];\n      let index = array.findIndex(m => m._id === action.payload);\n      array.splice(index, 1);\n      return { ...state,\n        media: array\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default mediaReducer;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/store/reducer/mediaReducer.js"],"names":["init","media","mediaReducer","state","action","type","payload","array","index","findIndex","m","_id","splice"],"mappings":"AACA,IAAIA,IAAI,GAAE;AACNC,EAAAA,KAAK,EAAC;AADA,CAAV;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACH,IAAP,EAAaI,MAAb,KAAsB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACD,aAAM,EACF,GAAGF,KADD;AAEFF,QAAAA,KAAK,EAACG,MAAM,CAACE;AAFX,OAAN;;AAKC,SAAK,WAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,KAAK,EAAG,CAACG,MAAM,CAACE,OAAR,EAAgB,GAAGH,KAAK,CAACF,KAAzB;AAFN,OAAN;;AAIJ,SAAK,cAAL;AACI,UAAIM,KAAK,GAAG,CAAC,GAAGJ,KAAK,CAACF,KAAV,CAAZ;AACA,UAAIO,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAEA,CAAC,CAACC,GAAF,KAAUP,MAAM,CAACE,OAApC,CAAZ;AACAC,MAAAA,KAAK,CAACK,MAAN,CAAaJ,KAAb,EAAmB,CAAnB;AACA,aAAM,EACF,GAAGL,KADD;AAEFF,QAAAA,KAAK,EAAEM;AAFL,OAAN;;AAKJ;AACI,aAAOJ,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,YAAf","sourcesContent":["\nlet init ={\n    media:[],\n  \n}\n\nconst mediaReducer = (state=init, action)=>{\n    switch (action.type) {\n        case \"SET_MEDIA\":\n       return{\n           ...state,\n           media:action.payload,\n        }\n\n        case \"ADD_MEDIA\":\n            return{\n                ...state,\n                media:  [action.payload,...state.media],\n             }\n        case \"UPDATE_MEDIA\":\n            let array = [...state.media]\n            let index = array.findIndex(m=>m._id === action.payload)\n            array.splice(index,1)\n            return{\n                ...state,\n                media: array,\n             }\n    \n        default:\n            return state;\n    }\n}\n\nexport default mediaReducer"]},"metadata":{},"sourceType":"module"}