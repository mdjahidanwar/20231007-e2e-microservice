{"ast":null,"code":"import Resizer from \"react-image-file-resizer\";\nexport const resizeFile = file => new Promise(resolve => {\n  Resizer.imageFileResizer(file, 1100, 700, \"JPEG\", 100, 0, uri => {\n    resolve(uri);\n  }, \"base64\");\n});\nexport const dataURIToBlob = dataURI => {\n  const splitDataURI = dataURI.split(\",\");\n  const byteString = splitDataURI[0].indexOf(\"base64\") >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1]);\n  const mimeString = splitDataURI[0].split(\":\")[1].split(\";\")[0];\n  const ia = new Uint8Array(byteString.length);\n\n  for (let i = 0; i < byteString.length; i++) ia[i] = byteString.charCodeAt(i);\n\n  return new Blob([ia], {\n    type: mimeString\n  });\n};","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/components/imageResize.js"],"names":["Resizer","resizeFile","file","Promise","resolve","imageFileResizer","uri","dataURIToBlob","dataURI","splitDataURI","split","byteString","indexOf","atob","decodeURI","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IACxB,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBJ,EAAAA,OAAO,CAACK,gBAAR,CACEH,IADF,EAEE,IAFF,EAGE,GAHF,EAIE,MAJF,EAKE,GALF,EAME,CANF,EAOGI,GAAD,IAAS;AACPF,IAAAA,OAAO,CAACE,GAAD,CAAP;AACD,GATH,EAUE,QAVF;AAYD,CAbD,CADK;AAeP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxC,QAAMC,YAAY,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAArB;AACA,QAAMC,UAAU,GACdF,YAAY,CAAC,CAAD,CAAZ,CAAgBG,OAAhB,CAAwB,QAAxB,KAAqC,CAArC,GACIC,IAAI,CAACJ,YAAY,CAAC,CAAD,CAAb,CADR,GAEIK,SAAS,CAACL,YAAY,CAAC,CAAD,CAAb,CAHf;AAIA,QAAMM,UAAU,GAAGN,YAAY,CAAC,CAAD,CAAZ,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BA,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CAAnB;AACA,QAAMM,EAAE,GAAG,IAAIC,UAAJ,CAAeN,UAAU,CAACO,MAA1B,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACO,MAA/B,EAAuCC,CAAC,EAAxC,EAA4CH,EAAE,CAACG,CAAD,CAAF,GAAQR,UAAU,CAACS,UAAX,CAAsBD,CAAtB,CAAR;;AAC5C,SAAO,IAAIE,IAAJ,CAAS,CAACL,EAAD,CAAT,EAAe;AAAEM,IAAAA,IAAI,EAAEP;AAAR,GAAf,CAAP;AACD,CAVM","sourcesContent":["import Resizer from \"react-image-file-resizer\";\nexport const resizeFile = (file) =>\n  new Promise((resolve) => {\n    Resizer.imageFileResizer(\n      file,\n      1100,\n      700,\n      \"JPEG\",\n      100,\n      0,\n      (uri) => {\n        resolve(uri);\n      },\n      \"base64\"\n    );\n  });\nexport const dataURIToBlob = (dataURI) => {\n  const splitDataURI = dataURI.split(\",\");\n  const byteString =\n    splitDataURI[0].indexOf(\"base64\") >= 0\n      ? atob(splitDataURI[1])\n      : decodeURI(splitDataURI[1]);\n  const mimeString = splitDataURI[0].split(\":\")[1].split(\";\")[0];\n  const ia = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) ia[i] = byteString.charCodeAt(i);\n  return new Blob([ia], { type: mimeString });\n};"]},"metadata":{},"sourceType":"module"}