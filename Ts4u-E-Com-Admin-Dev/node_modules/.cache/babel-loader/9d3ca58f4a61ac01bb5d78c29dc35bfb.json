{"ast":null,"code":"var _jsxFileName = \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/product/Attributes.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Input, Button, Table, Tag, Space, Image, Switch, Popconfirm } from 'antd';\nimport { UploadOutlined, EditOutlined, DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport \"./attribute.scss\";\nimport axios from 'axios';\nimport ChipInput from 'material-ui-chip-input';\n\nfunction Attributes() {\n  const [editId, setEditId] = useState(null);\n  const [attributes, setAttributes] = useState([]);\n  const [values, setValues] = useState([]);\n  const [attributeName, setAttributeName] = useState('');\n\n  const clearFields = () => {\n    setAttributeName('');\n    setValues([]);\n    setEditId(null);\n  };\n\n  const handleRemoveValues = (value, index) => {\n    setValues(prev => prev.filter(v => v !== value));\n  };\n\n  const createAttribute = () => {\n    let data = {\n      name: attributeName,\n      values\n    };\n    axios.post('/attribute/create', data).then(res => {\n      setAttributes(prev => [...prev, res.data.attribute]);\n      clearFields();\n    }).catch(err => {\n      err && err.response && console.log(err.response.data);\n    });\n  };\n\n  const getAttributes = () => {\n    axios.get('/attribute/get').then(res => {\n      setAttributes(res.data.attributes);\n    }).catch(err => {\n      err && err.response && console.log(err.response.data);\n    });\n  };\n\n  const deleteAttribute = id => {\n    axios.delete(`/attribute/delete/${id}`).then(res => {\n      getAttributes();\n    }).catch(err => {\n      err && err.response && console.log(err.response.data);\n    });\n  };\n\n  const setEditAttr = attr => {\n    setEditId(attr._id);\n    setAttributeName(attr.name);\n    setValues(attr.values);\n  };\n\n  const updateAttribute = () => {\n    let data = {\n      name: attributeName,\n      values\n    };\n    axios.patch(`/attribute/update/${editId}`, data).then(res => {\n      if (res.data.success) {\n        let attrArray = [...attributes];\n        let index = attrArray.findIndex(a => a._id === res.data.attribute._id);\n        attrArray[index] = res.data.attribute;\n        setAttributes(attrArray);\n        clearFields();\n      }\n    }).catch(err => {\n      err && err.response && console.log(err.response.data);\n    });\n  };\n\n  useEffect(() => {\n    getAttributes();\n  }, []);\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Values',\n    key: 'values',\n    dataIndex: 'values',\n    render: values => /*#__PURE__*/React.createElement(React.Fragment, null, values.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Tag, {\n        key: index,\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, value);\n    }))\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/React.createElement(Space, {\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setEditAttr(record),\n      className: \"d-center\",\n      type: \"primary\",\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 107\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Popconfirm, {\n      onConfirm: () => deleteAttribute(record._id),\n      title: \"Are you sure\\uFF1F\",\n      icon: /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 107\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"d-center\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 60\n        }\n      }),\n      danger: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    })))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attributes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    lg: 14,\n    md: 24,\n    sm: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: \"15px\"\n    },\n    title: \"Attributes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: attributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"gutter-row\",\n    lg: 10,\n    md: 24,\n    sm: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: \"15px\"\n    },\n    title: editId ? \"Update Attribute\" : \"Create Attribute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attribute_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, \"Attribute name \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 55\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n    value: attributeName,\n    onChange: e => setAttributeName(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter attribute name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, \"Attribute values \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 57\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(ChipInput, {\n    alwaysShowPlaceholde: true,\n    placeholder: \"Provide values and hit enter\",\n    value: values,\n    onAdd: chip => setValues(prev => [...prev, chip]),\n    onDelete: (chip, index) => handleRemoveValues(chip, index),\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  })), editId ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => updateAttribute(),\n    className: \"submit_btn\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => clearFields(),\n    className: \"submit_btn\",\n    type: \"primary\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(Button, {\n    onClick: () => createAttribute(),\n    className: \"submit_btn\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, \"Create\"))))));\n}\n\nexport default Attributes;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/pages/product/Attributes.js"],"names":["React","useState","useEffect","Row","Col","Card","Input","Button","Table","Tag","Space","Image","Switch","Popconfirm","UploadOutlined","EditOutlined","DeleteOutlined","QuestionCircleOutlined","axios","ChipInput","Attributes","editId","setEditId","attributes","setAttributes","values","setValues","attributeName","setAttributeName","clearFields","handleRemoveValues","value","index","prev","filter","v","createAttribute","data","name","post","then","res","attribute","catch","err","response","console","log","getAttributes","get","deleteAttribute","id","delete","setEditAttr","attr","_id","updateAttribute","patch","success","attrArray","findIndex","a","columns","title","dataIndex","key","render","map","text","record","color","marginTop","e","target","chip"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Card, Input, Button, Table, Tag, Space, Image, Switch, Popconfirm } from 'antd';\nimport { UploadOutlined, EditOutlined, DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons'\nimport \"./attribute.scss\"\nimport axios from 'axios'\nimport ChipInput from 'material-ui-chip-input'\n\n\n\nfunction Attributes() {\n  \n    \n    const [editId, setEditId] = useState(null)\n    \n    const [attributes, setAttributes] = useState([])\n    const [values, setValues] = useState([])\n\n    const [attributeName, setAttributeName] = useState('')\n\n    const clearFields = () => {\n        setAttributeName('')\n        setValues([])\n        setEditId(null)\n    }\n\n    const handleRemoveValues=(value,index)=>{\n     \n        setValues(prev=>prev.filter(v=>v !== value))\n    }\n\n\n    const createAttribute = () => {\n        let data = {\n            name: attributeName,\n            values\n        }\n        axios.post('/attribute/create', data)\n            .then(res => {\n                setAttributes(prev => [...prev, res.data.attribute]);\n                clearFields()\n            })\n            .catch(err => {\n                err && err.response && console.log(err.response.data)\n            })\n    }\n\n    const getAttributes = () => {\n        axios.get('/attribute/get')\n            .then(res => {\n                setAttributes(res.data.attributes)\n            })\n            .catch(err => {\n                err && err.response && console.log(err.response.data)\n            })\n    }\n    const deleteAttribute = (id) => {\n        axios.delete(`/attribute/delete/${id}`)\n            .then(res => {\n                getAttributes()\n            })\n            .catch(err => {\n                err && err.response && console.log(err.response.data)\n            })\n    }\n\n    const setEditAttr = (attr) => {\n\n        setEditId(attr._id)\n        setAttributeName(attr.name)\n        setValues(attr.values)\n        \n    }\n\n    const updateAttribute = () => {\n        let data = {\n            name: attributeName,\n            values\n        }\n        axios.patch(`/attribute/update/${editId}`, data)\n            .then(res => {\n                if (res.data.success) {\n                    let attrArray = [...attributes]\n                    let index = attrArray.findIndex(a => a._id === res.data.attribute._id)\n                    attrArray[index] = res.data.attribute\n                    setAttributes(attrArray)\n                    clearFields()\n                }\n            })\n            .catch(err => {\n                err && err.response && console.log(err.response.data)\n            })\n    }\n\n    useEffect(() => {\n        getAttributes()\n    }, [])\n\n\n\n\n\n\n    const columns = [\n\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n\n        {\n            title: 'Values',\n            key: 'values',\n            dataIndex: 'values',\n            render: values => (\n                <>\n                    {\n                        values.map((value, index) => {\n                            return (\n                                <Tag key={index} color=\"green\">{value}</Tag>\n                            )\n                        })\n\n                    }\n                </>\n            ),\n        },\n\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button onClick={() => setEditAttr(record)} className='d-center' type='primary' icon={<EditOutlined />}></Button>\n                    <Popconfirm onConfirm={() => deleteAttribute(record._id)} title=\"Are you sure？\" icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\n                        <Button className='d-center' icon={<DeleteOutlined />} danger></Button>\n                    </Popconfirm>\n\n                </Space>\n            ),\n        },\n    ];\n    return (\n        <div className='attributes'>\n            <Row gutter={16}>\n                <Col className=\"gutter-row\" lg={14} md={24} sm={24}>\n                    <Card style={{ marginTop: \"15px\" }} title=\"Attributes\" >\n                        <Table columns={columns} dataSource={attributes} />\n                    </Card>\n                </Col>\n                <Col className=\"gutter-row\" lg={10} md={24} sm={24}>\n\n                    <Card style={{ marginTop: \"15px\" }} title={editId ? \"Update Attribute\" : \"Create Attribute\"} >\n                        <div className='attribute_wrapper'>\n                            <div className='input_item'>\n                                <label>Attribute name <span className='required'>*</span></label>\n                                <Input\n                                    value={attributeName}\n                                    onChange={(e) => setAttributeName(e.target.value)}\n                                    type=\"text\"\n                                    placeholder='Enter attribute name'>\n                                </Input>\n\n                            </div>\n\n                            <div className='input_item'>\n                                <label>Attribute values <span className='required'>*</span></label>\n\n                                <ChipInput\n                                alwaysShowPlaceholde={true}\n                                placeholder=\"Provide values and hit enter\"\n                                    value={values}\n                                    onAdd={(chip) => setValues(prev=>[...prev,chip])}\n                                    onDelete={(chip, index) => handleRemoveValues(chip, index)}\n                                    variant='outlined'\n                                    \n                                    fullWidth={true}\n                                />\n                            </div>\n\n                            {/* <div className='input_item'>\n                                <label>Active <span className='required'>*</span></label>\n                                <Switch checked={status} onChange={(checked)=>setStatus(checked)} />\n\n                            </div> */}\n                            {\n                                editId ? <>\n                                    <Button onClick={() => updateAttribute()} className='submit_btn' type=\"primary\">Update</Button>\n                                    <Button onClick={() => clearFields()} className='submit_btn' type=\"primary\" danger>Cancel</Button>\n                                </> :\n                                    <Button onClick={() => createAttribute()} className='submit_btn' type=\"primary\">Create</Button>\n                            }\n\n                        </div>\n                    </Card>\n\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Attributes\n\n"]},"metadata":{},"sourceType":"module"}