{"ast":null,"code":"var _jsxFileName = \"/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/components/MediaLibrary.js\";\nimport React from 'react';\nimport { FileLibraryListItem, ReactMediaLibrary, FileMeta } from 'react-media-library';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './media.scss';\nimport { dataURIToBlob, resizeFile } from '../components/imageResize';\nimport axios from 'axios';\n\nfunction MediaLibrary({\n  display,\n  onHide,\n  selectCallback\n}) {\n  const {\n    media\n  } = useSelector(state => state.media);\n  const dispatch = useDispatch();\n\n  async function uploadCallback(fileBase64, fileMeta) {\n    // TODO Upload file to backend APIs\n    const imageConverted = await resizeFile(dataURIToBlob(fileBase64));\n    let formData = new FormData();\n    formData.append(\"media\", dataURIToBlob(imageConverted), fileMeta.fileName);\n    let res = await axios.post('/media/upload', formData);\n\n    if (res.status === 200) {\n      dispatch({\n        type: \"ADD_MEDIA\",\n        payload: res.data.data\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  async function deleteCallback(item) {\n    // console.log(item);\n    let res = await axios.delete(`/media/delete/${item._id}`);\n\n    if (res.data.success) {\n      dispatch({\n        type: \"UPDATE_MEDIA\",\n        payload: item._id\n      });\n    } // Delete the data from your database\n    // Also remember to update the fileLibraryList prop with a new list\n\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactMediaLibrary, {\n    show: display,\n    onHide: onHide,\n    fileUploadCallback: uploadCallback,\n    fileLibraryList: media,\n    fileSelectCallback: selectCallback,\n    fileDeleteCallback: deleteCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default MediaLibrary;","map":{"version":3,"sources":["/home/e2e/e2e-microservice/20231007-e2e-microservice/Ts4u-E-Com-Admin-Dev/src/components/MediaLibrary.js"],"names":["React","FileLibraryListItem","ReactMediaLibrary","FileMeta","useSelector","useDispatch","dataURIToBlob","resizeFile","axios","MediaLibrary","display","onHide","selectCallback","media","state","dispatch","uploadCallback","fileBase64","fileMeta","imageConverted","formData","FormData","append","fileName","res","post","status","type","payload","data","deleteCallback","item","delete","_id","success"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,QAAjD,QAAiE,qBAAjE;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAO,cAAP;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,2BAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAtB,EAA2D;AAEvD,QAAM;AAAEC,IAAAA;AAAF,MAAYT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAA7B;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,iBAAeW,cAAf,CAA8BC,UAA9B,EAA0CC,QAA1C,EAAoD;AAChD;AAEA,UAAMC,cAAc,GAAG,MAAMZ,UAAU,CAAED,aAAa,CAACW,UAAD,CAAf,CAAvC;AAGA,QAAIG,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBhB,aAAa,CAACa,cAAD,CAAtC,EAAuDD,QAAQ,CAACK,QAAhE;AAEA,QAAIC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,eAAX,EAA2BL,QAA3B,CAAhB;;AACA,QAAGI,GAAG,CAACE,MAAJ,KAAa,GAAhB,EAAoB;AAChBX,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAC,WADA;AAELC,QAAAA,OAAO,EAACJ,GAAG,CAACK,IAAJ,CAASA;AAFZ,OAAD,CAAR;AAIA,aAAO,IAAP;AACH,KAND,MAMK;AACD,aAAO,KAAP;AACH;AAEJ;;AAGD,iBAAeC,cAAf,CAA8BC,IAA9B,EAAoC;AACjC;AAEC,QAAIP,GAAG,GAAG,MAAMhB,KAAK,CAACwB,MAAN,CAAc,iBAAgBD,IAAI,CAACE,GAAI,EAAvC,CAAhB;;AACA,QAAGT,GAAG,CAACK,IAAJ,CAASK,OAAZ,EAAoB;AAChBnB,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAAC,cADA;AAELC,QAAAA,OAAO,EAACG,IAAI,CAACE;AAFR,OAAD,CAAR;AAIH,KAT+B,CAUhC;AACA;;AACH;;AAED,sBACQ,uDACI,oBAAC,iBAAD;AAEI,IAAA,IAAI,EAAEvB,OAFV;AAGI,IAAA,MAAM,EAAEC,MAHZ;AAII,IAAA,kBAAkB,EAAEK,cAJxB;AAKI,IAAA,eAAe,EAAEH,KALrB;AAMI,IAAA,kBAAkB,EAAED,cANxB;AAOI,IAAA,kBAAkB,EAAEkB,cAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR;AAaC;;AAED,eAAerB,YAAf","sourcesContent":["import React from 'react'\nimport { FileLibraryListItem, ReactMediaLibrary, FileMeta } from 'react-media-library';\nimport { useSelector,useDispatch } from 'react-redux'\nimport './media.scss'\nimport { dataURIToBlob, resizeFile } from '../components/imageResize'\nimport axios from 'axios'\n\n\nfunction MediaLibrary({ display, onHide, selectCallback }) {\n\n    const { media } = useSelector(state => state.media)\n    const dispatch = useDispatch()\n\n    async function uploadCallback(fileBase64, fileMeta) {\n        // TODO Upload file to backend APIs\n        \n        const imageConverted = await resizeFile( dataURIToBlob(fileBase64));\n       \n       \n        let formData = new FormData();\n        formData.append(\"media\", dataURIToBlob(imageConverted),fileMeta.fileName);\n\n        let res = await axios.post('/media/upload',formData)\n        if(res.status===200){\n            dispatch({\n                type:\"ADD_MEDIA\",\n                payload:res.data.data\n            })\n            return true;\n        }else{\n            return false;\n        }\n\n    }\n\n\n    async function deleteCallback(item) {\n       // console.log(item);\n\n        let res = await axios.delete(`/media/delete/${item._id}`)\n        if(res.data.success){\n            dispatch({\n                type:\"UPDATE_MEDIA\",\n                payload:item._id\n            })\n        }\n        // Delete the data from your database\n        // Also remember to update the fileLibraryList prop with a new list\n    }\n\n    return (\n            <>\n                <ReactMediaLibrary\n\n                    show={display}\n                    onHide={onHide}\n                    fileUploadCallback={uploadCallback}\n                    fileLibraryList={media}\n                    fileSelectCallback={selectCallback}\n                    fileDeleteCallback={deleteCallback}\n                />\n            </>\n        )\n    }\n\n    export default MediaLibrary\n"]},"metadata":{},"sourceType":"module"}